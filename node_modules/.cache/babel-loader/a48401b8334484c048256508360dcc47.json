{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/andrewrueterpoetry/src/pages/Poems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport nl2br from \"react-newline-to-break\";\nimport PoemAPI from \"../utilities/poems.json\";\nimport FeaturePoemAPI from \"../utilities/featuredpoems.json\";\nimport { Grid, Typography, InputLabel, MenuItem, Select, FormControl } from \"@material-ui/core\";\nimport PoemCard from '../components/PoemCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Poems = props => {\n  _s();\n\n  const [filter, setFilter] = useState(props.page);\n  const style = {\n    column: {\n      height: \"auto\",\n      width: \"auto\"\n    }\n  };\n  useEffect(() => {\n    setFilter(props.page);\n  }, [props.page]);\n\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n\n  switch (filter) {\n    case \"featuredpoems\":\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 10,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"featured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: filter,\n              onChange: handleChange,\n              displayEmpty: true,\n              inputProps: {\n                'aria-label': 'Without label'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"featuredpoems\",\n                children: \"Featured Poems\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"all\",\n                children: \"All Poems\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), FeaturePoemAPI.data.map(film => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 8,\n          xs: 12,\n          style: style.column,\n          children: /*#__PURE__*/_jsxDEV(PoemCard, {\n            info: film,\n            text: nl2br(film.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: filter,\n              onChange: handleChange,\n              displayEmpty: true,\n              inputProps: {\n                'aria-label': 'Without label'\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"featuredpoems\",\n                children: \"Featured Poems\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"all\",\n                children: \"All Poems\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), PoemAPI.data.map(film => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 8,\n          xs: 12,\n          style: style.column,\n          children: /*#__PURE__*/_jsxDEV(PoemCard, {\n            info: film,\n            text: nl2br(film.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this);\n  }\n};\n\n_s(Poems, \"JB8Q7SMmG3laitm91MDrZ4mlQM0=\");\n\n_c = Poems;\nexport default Poems;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poems\");","map":{"version":3,"sources":["/Users/markgire/Desktop/andrewrueterpoetry/src/pages/Poems.js"],"names":["React","useState","useEffect","nl2br","PoemAPI","FeaturePoemAPI","Grid","Typography","InputLabel","MenuItem","Select","FormControl","PoemCard","Poems","props","filter","setFilter","page","style","column","height","width","handleChange","e","target","value","data","map","film","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport nl2br from \"react-newline-to-break\";\nimport PoemAPI from \"../utilities/poems.json\";\nimport FeaturePoemAPI from \"../utilities/featuredpoems.json\";\nimport { Grid, Typography, InputLabel, MenuItem, Select, FormControl } from \"@material-ui/core\";\n\nimport PoemCard from '../components/PoemCard';\n\n\nconst Poems = (props) => {\n\n    const [filter, setFilter] = useState(props.page)\n\n    const style= {\n        column: {\n            height: \"auto\",\n            width: \"auto\"\n        }\n    }\n\n    useEffect(() => {\n        setFilter(props.page)\n    },[props.page])\n\n    const handleChange = (e) => {\n        setFilter(e.target.value)\n    }\n\n    switch(filter){\n    case \"featuredpoems\":\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={10}\n                >\n                    <p>featured</p>\n                <Grid item md={12} xs={12}>\n                    <FormControl>\n                        <Select\n                        value={filter}\n                        onChange={handleChange}\n                        displayEmpty\n                        inputProps={{ 'aria-label': 'Without label' }}>\n                            <MenuItem value=\"featuredpoems\">Featured Poems</MenuItem>\n                            <MenuItem value=\"all\">All Poems</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                {FeaturePoemAPI.data.map(film => (\n                <Grid item md={8} xs={12} style={style.column}><PoemCard info={film} text={nl2br(film.text)}/></Grid>\n                    ))}\n            </Grid>\n        )\n    default:\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                spacing={10}\n                >\n                <Grid item md={12} xs={12}>\n                    <FormControl>\n                        <Select\n                        value={filter}\n                        onChange={handleChange}\n                        displayEmpty\n                        inputProps={{ 'aria-label': 'Without label' }}>\n                            <MenuItem value=\"featuredpoems\">Featured Poems</MenuItem>\n                            <MenuItem value=\"all\">All Poems</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                {PoemAPI.data.map(film => (\n                <Grid item md={8} xs={12} style={style.column}><PoemCard info={film} text={nl2br(film.text)}/></Grid>\n                    ))}\n            </Grid>\n        )\n    }\n}\n\nexport default Poems;"]},"metadata":{},"sourceType":"module"}