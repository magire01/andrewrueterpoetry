{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js\";\nimport React from \"react\";\nimport { Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoemCard = props => {\n  const style = {\n    card: {\n      height: \"auto\",\n      width: \"80%\"\n    },\n    cardLong: {\n      height: 200,\n      width: \"80%\"\n    }\n  };\n  if (props.info.text.length > 150) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: style.cardLong,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Continue Reading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = PoemCard;\nexport default PoemCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoemCard\");","map":{"version":3,"sources":["/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js"],"names":["React","Grid","Card","CardActionArea","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","useMediaQuery","useTheme","PoemCard","props","style","card","height","width","cardLong","info","text","length","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,cAArB,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,WAAzD,EAAsEC,aAAtE,EAAqFC,iBAArF,EAAwGC,aAAxG,EAAuHC,MAAvH,EAA+HC,aAA/H,EAA8IC,QAA9I,QAA8J,mBAA9J;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAMC,KAAK,GAAG;AACVC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,KAAK,EAAE;AAFL,KADI;AAKVC,IAAAA,QAAQ,EAAE;AACNF,MAAAA,MAAM,EAAE,GADF;AAENC,MAAAA,KAAK,EAAE;AAFD;AALA,GAAd;AAWA,MAAIJ,KAAK,CAACM,IAAN,CAAWC,IAAX,CAAgBC,MAAhB,GAAyB,GAA7B,EACA,oBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,cAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBAA0BR,KAAK,CAACM,IAAN,CAAWG;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAER,KAAK,CAACI,QAAnB;AAAA,iCACA,QAAC,UAAD;AAAA,sBAAaL,KAAK,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,cAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBAA0BP,KAAK,CAACM,IAAN,CAAWG;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,iCACI,QAAC,UAAD;AAAA,sBAAaT,KAAK,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH,CAxCD;;KAAMR,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\n\nimport { Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\n\nconst PoemCard = (props) => {\n    \n    const style = {\n        card: {\n            height: \"auto\",\n            width: \"80%\"\n        },\n        cardLong: {\n            height: 200,\n            width: \"80%\"\n        }\n    }\n\n    if (props.info.text.length > 150)\n    return (\n        <>\n            <Card>\n                <CardActionArea>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card style={style.cardLong}>\n                    <Typography>{props.text}</Typography>\n                    </Card>\n                    <Button>Continue Reading</Button>\n                </CardActionArea>\n            </Card>\n        </>\n    )\n\n    return (\n        <>\n            <Card>\n                <CardActionArea>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card>\n                        <Typography>{props.text}</Typography>\n                    </Card>\n                </CardActionArea>\n            </Card>\n        </>\n    )\n}\n\nexport default PoemCard;"]},"metadata":{},"sourceType":"module"}