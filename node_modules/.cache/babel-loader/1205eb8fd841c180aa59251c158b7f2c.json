{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/andrewrueterpoetry/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport Slider from \"./components/SliderComp/Slider\";\nimport { Container, Grid, Typography, Paper, Tabs, Tab, Button } from \"@material-ui/core\";\nimport Poems from \"./pages/Poems\";\nimport Films from \"./pages/Films\";\nimport Contact from \"./pages/Contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const page = {\n    allPoems: \"AllPoems\",\n    featuredPoems: \"FeaturedPoems\",\n    allFilms: \"AllFilms\",\n    featuredFilms: \"FeaturedFilms\",\n    contact: \"Contact\"\n  };\n  const [showPage, setShowPage] = useState(\"AllPoems\");\n\n  const getPage = () => {\n    switch (showPage) {\n      case \"AllFilms\":\n        return /*#__PURE__*/_jsxDEV(Films, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n\n      case \"Contact\":\n        return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Poems, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  const style = {\n    active: {\n      color: \"red\"\n    },\n    inactive: {\n      color: \"black\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      className: \"banner\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"h3\",\n          centered: true,\n          className: \"bannerFont\",\n          children: \"Andrew\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"h3\",\n          centered: true,\n          className: \"bannerFont\",\n          children: \"Rueter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"h3\",\n          centered: true,\n          className: \"bannerFontPoetry\",\n          children: \"Poetry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: \"12\",\n        md: \"6\",\n        className: \"bannerSlider\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          onChange: value => setShowPage(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Poems\",\n          onClick: () => setShowPage(\"AllPoems\"),\n          style: showPage == \"AllPoems\" ? style.active : style.inactive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Films\",\n          onClick: () => setShowPage(page.allFilms),\n          style: showPage == page.allFilms ? style.active : style.inactive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Contact\",\n          onClick: () => setShowPage(page.contact),\n          style: showPage == page.contact ? style.active : style.inactive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: getPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0T79nua6gUtvJTCs9HTZlU6b6e8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/markgire/Desktop/andrewrueterpoetry/src/App.js"],"names":["React","useState","Slider","Container","Grid","Typography","Paper","Tabs","Tab","Button","Poems","Films","Contact","App","page","allPoems","featuredPoems","allFilms","featuredFilms","contact","showPage","setShowPage","getPage","style","active","color","inactive","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\nimport Slider from \"./components/SliderComp/Slider\";\nimport { Container, Grid, Typography, Paper, Tabs, Tab, Button } from \"@material-ui/core\";\n\nimport Poems from \"./pages/Poems\";\nimport Films from \"./pages/Films\";\nimport Contact from \"./pages/Contact\";\n\n\nfunction App() {\n\n  const page = {\n    allPoems: \"AllPoems\",\n    featuredPoems: \"FeaturedPoems\",\n    allFilms: \"AllFilms\",\n    featuredFilms: \"FeaturedFilms\",\n    contact: \"Contact\"\n  }\n\n  const [showPage, setShowPage ] = useState(\"AllPoems\");\n\n  const getPage = () => {\n    switch(showPage) {\n      case \"AllFilms\":\n        return <Films />\n      case \"Contact\":\n        return <Contact />\n      default:\n        return <Poems />\n    }\n  }\n\n  const style = {\n    active: {\n        color: \"red\"\n    },\n    inactive: {\n        color: \"black\"\n    }\n  }\n\n  \n\n  return (\n    <div>\n      {/* Banner Section */}\n      <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\" className={\"banner\"}>\n        <Grid item xs=\"12\" md=\"6\">\n          <Typography align=\"center\" variant=\"h3\" centered className={\"bannerFont\"}>Andrew</Typography>\n          <Typography align=\"center\" variant=\"h3\" centered className={\"bannerFont\"}>Rueter</Typography>\n          <Typography align=\"center\" variant=\"h3\" centered className={\"bannerFontPoetry\"}>Poetry</Typography>\n        </Grid>\n        <Grid item xs=\"12\" md=\"6\" className={\"bannerSlider\"}>\n          <Slider onChange={value => setShowPage(value)}/>\n        </Grid>\n      </Grid>\n      {/* Nav Section */}\n      <Paper>\n        <Tabs centered>\n          <Tab label=\"Poems\" onClick={() => setShowPage(\"AllPoems\")} style={(showPage == \"AllPoems\") ? style.active : style.inactive} />\n          <Tab label=\"Films\" onClick={() => setShowPage(page.allFilms)} style={(showPage == page.allFilms) ? style.active : style.inactive} />\n          <Tab label=\"Contact\" onClick={() => setShowPage(page.contact)} style={(showPage == page.contact) ? style.active : style.inactive} />\n        </Tabs>\n      </Paper>\n      <Container>\n      {/* Body Section */}\n        {getPage()}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}