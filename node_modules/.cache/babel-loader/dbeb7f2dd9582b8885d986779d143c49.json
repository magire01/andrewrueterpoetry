{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/TestSite/arpoetry/src/components/FilmCard.js\";\nimport React from 'react';\nimport { Grid, Card, CardActionArea, CardMedia, Typography, Dialog, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilmCard = props => {\n  const style = {\n    img: {\n      height: 400,\n      width: \"auto\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.info.img,\n            style: style.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: [\" \", props.info.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          autoFocus: true,\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = FilmCard;\nexport default FilmCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmCard\");","map":{"version":3,"sources":["/Users/markgire/Desktop/TestSite/arpoetry/src/components/FilmCard.js"],"names":["React","Grid","Card","CardActionArea","CardMedia","Typography","Dialog","DialogContent","DialogContentText","DialogActions","Button","FilmCard","props","style","img","height","width","info","title","fullScreen","open","handleClose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,cAArB,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4DC,MAA5D,EAAoEC,aAApE,EAAmFC,iBAAnF,EAAsGC,aAAtG,EAAqHC,MAArH,QAAmI,mBAAnI;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAMC,KAAK,GAAG;AACVC,IAAAA,GAAG,EAAE;AACDC,MAAAA,MAAM,EAAE,GADP;AAEDC,MAAAA,KAAK,EAAE;AAFN;AADK,GAAd;AAMA,sBAAQ;AAAA,4BACJ,QAAC,IAAD;AAAA,6BACI,QAAC,cAAD;AAAA,+BACI,QAAC,SAAD;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEJ,KAAK,CAACK,IAAN,CAAWH,GAArB;AAA0B,YAAA,KAAK,EAAED,KAAK,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAA,4BAAkCF,KAAK,CAACK,IAAN,CAAWC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADI,eAUJ,QAAC,MAAD;AACA,MAAA,UAAU,EAAEC,UADZ;AAEA,MAAA,IAAI,EAAEC,IAFN;AAGA,MAAA,OAAO,EAAEC,WAHT;AAIA,yBAAgB,yBAJhB;AAAA,8BAMA,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,yBAAhB;AAAA,kBAA2C;AAA3C;AAAA;AAAA;AAAA;AAAA,cANA,eAOA,QAAC,aAAD;AAAA,+BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPA,eAaA,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,MAAjB;AAAkB,UAAA,OAAO,EAAEA,WAA3B;AAAwC,UAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAA8C,UAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVI;AAAA,kBAAR;AAkCH,CA1CD;;KAAMV,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Grid, Card, CardActionArea, CardMedia, Typography, Dialog, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\n\nconst FilmCard = (props) => {\n\n    const style = {\n        img: {\n            height: 400,\n            width: \"auto\"\n        }\n    }\n    return (<>\n        <Card>\n            <CardActionArea>\n                <CardMedia>\n                    <img src={props.info.img} style={style.img}/>\n                    <Typography variant=\"subtitle1\"> {props.info.title} </Typography>\n                </CardMedia>\n                \n            </CardActionArea>\n        </Card>\n        <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </>\n    )\n}\n\nexport default FilmCard;"]},"metadata":{},"sourceType":"module"}