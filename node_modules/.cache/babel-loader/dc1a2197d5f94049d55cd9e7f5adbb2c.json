{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/andrewrueterpoetry/src/pages/Films.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography, InputLabel, MenuItem, Select, FormControl } from \"@material-ui/core\";\nimport FilmAPI from \"../utilities/films.json\";\nimport NewFilmsAPI from \"../utilities/newfilms.json\";\nimport FilmCard from '../components/FilmCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Films = props => {\n  _s();\n\n  const [filter, setFilter] = useState(\"AllFilms\");\n  const style = {\n    column: {\n      height: \"auto\",\n      width: \"auto\"\n    }\n  };\n  useEffect(() => {\n    setFilter(props.filter);\n  }, []);\n\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n\n  if (filter == \"AllFilms\") return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    spacing: 10,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 9,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: filter,\n          onChange: handleChange,\n          inputProps: {\n            'aria-label': 'Without label'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"NewFilms\",\n            children: \"New Film Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"AllFilms\",\n            children: \"All Film Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), filter == \"AllFilms\" ? FilmAPI.data.map(film => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 4,\n      xs: 12,\n      style: style.column,\n      children: /*#__PURE__*/_jsxDEV(FilmCard, {\n        info: film\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)) : NewFilmsAPI.data.map(film => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 4,\n      xs: 12,\n      style: style.column,\n      children: /*#__PURE__*/_jsxDEV(FilmCard, {\n        info: film\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)), FilmAPI.data.map(film => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 4,\n      xs: 12,\n      style: style.column,\n      children: /*#__PURE__*/_jsxDEV(FilmCard, {\n        info: film\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    spacing: 10,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 9,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: filter,\n          onChange: handleChange,\n          inputProps: {\n            'aria-label': 'Without label'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"NewFilms\",\n            children: \"New Film Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"AllFilms\",\n            children: \"All Film Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), NewFilmsAPI.data.map(film => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 4,\n      xs: 12,\n      style: style.column,\n      children: /*#__PURE__*/_jsxDEV(FilmCard, {\n        info: film\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Films, \"VIK5JJM+PUGr9QGlpcTabblYtO8=\");\n\n_c = Films;\nexport default Films;\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["/Users/markgire/Desktop/andrewrueterpoetry/src/pages/Films.js"],"names":["React","useState","useEffect","Grid","Typography","InputLabel","MenuItem","Select","FormControl","FilmAPI","NewFilmsAPI","FilmCard","Films","props","filter","setFilter","style","column","height","width","handleChange","e","target","value","data","map","film"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Typography, InputLabel, MenuItem, Select, FormControl  } from \"@material-ui/core\";\n\nimport FilmAPI from \"../utilities/films.json\";\nimport NewFilmsAPI from \"../utilities/newfilms.json\";\n\nimport FilmCard from '../components/FilmCard';\n\n\nconst Films = (props) => {\n    const [filter, setFilter] = useState(\"AllFilms\")\n\n    const style= {\n        column: {\n            height: \"auto\",\n            width: \"auto\"\n        }\n    }\n    useEffect(() => {\n        setFilter(props.filter)\n    },[])\n\n    const handleChange = (e) => {\n        setFilter(e.target.value)\n    }\n\n    if (filter == \"AllFilms\")\n    return(\n        <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"baseline\"\n            spacing={10}\n            >\n            <Grid item md={9} xs={12}>\n                <FormControl>\n                    <Select\n                    value={filter}\n                    onChange={handleChange}\n                    inputProps={{ 'aria-label': 'Without label' }}>\n                        <MenuItem value=\"NewFilms\">New Film Reviews</MenuItem>\n                        <MenuItem value=\"AllFilms\">All Film Reviews</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            {(filter == \"AllFilms\")\n            ? FilmAPI.data.map(film => (    \n                <Grid item md={4} xs={12} style={style.column}><FilmCard info={film} /></Grid> \n                ))\n            : NewFilmsAPI.data.map(film => (    \n                <Grid item md={4} xs={12} style={style.column}><FilmCard info={film} /></Grid>\n            ))}\n                \n                {FilmAPI.data.map(film => (\n                    \n                    <Grid item md={4} xs={12} style={style.column}><FilmCard info={film} /></Grid>\n                    \n                ))}\n            </Grid>\n    )\n    return(\n        <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={10}\n            >\n            <Grid item md={9} xs={12}>\n                <FormControl>\n                    <Select\n                    value={filter}\n                    onChange={handleChange}\n                    inputProps={{ 'aria-label': 'Without label' }}>\n                        <MenuItem value=\"NewFilms\">New Film Reviews</MenuItem>\n                        <MenuItem value=\"AllFilms\">All Film Reviews</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            \n            {NewFilmsAPI.data.map(film => (\n                \n                <Grid item md={4} xs={12} style={style.column}><FilmCard info={film} /></Grid>\n                \n            ))}\n        </Grid>\n    )\n}\n\nexport default Films;"]},"metadata":{},"sourceType":"module"}