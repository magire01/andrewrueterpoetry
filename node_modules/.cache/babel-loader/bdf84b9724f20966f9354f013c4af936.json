{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js\";\nimport React, { useState } from \"react\";\nimport { Container, Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Paper, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoemCard = props => {\n  const style = {\n    card: {\n      height: \"auto\",\n      width: \"90%\",\n      border: \"none\",\n      boxShadow: \"none\"\n    },\n    cardLong: {\n      height: 200,\n      width: \"90%\",\n      border: \"none\",\n      boxShadow: \"none\"\n    },\n    entry: {\n      width: \"auto\",\n      height: \"auto\",\n      border: \"none\",\n      boxShadow: \"none\",\n      width: \"auto\",\n      height: \"auto\"\n    },\n    continue: {\n      color: \"red\"\n    }\n  };\n  const poemLength = props.info.text.length;\n  if (poemLength > 150) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: style.entry,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: style.cardLong,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: style.continue,\n      children: \"Continue Reading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: style.entry,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: style.card,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = PoemCard;\nexport default PoemCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoemCard\");","map":{"version":3,"sources":["/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js"],"names":["React","useState","Container","Grid","Card","CardActionArea","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Paper","Button","useMediaQuery","useTheme","PoemCard","props","style","card","height","width","border","boxShadow","cardLong","entry","continue","color","poemLength","info","text","length","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,cAAhC,EAAgDC,UAAhD,EAA4DC,MAA5D,EAAoEC,WAApE,EAAiFC,aAAjF,EAAgGC,iBAAhG,EAAmHC,aAAnH,EAAkIC,KAAlI,EAAyIC,MAAzI,EAAiJC,aAAjJ,EAAgKC,QAAhK,QAAgL,mBAAhL;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAMC,KAAK,GAAG;AACVC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE,MADN;AAEFC,MAAAA,KAAK,EAAE,KAFL;AAGFC,MAAAA,MAAM,EAAE,MAHN;AAIFC,MAAAA,SAAS,EAAE;AAJT,KADI;AAOVC,IAAAA,QAAQ,EAAE;AACNJ,MAAAA,MAAM,EAAE,GADF;AAENC,MAAAA,KAAK,EAAE,KAFD;AAGNC,MAAAA,MAAM,EAAE,MAHF;AAINC,MAAAA,SAAS,EAAE;AAJL,KAPA;AAaVE,IAAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAAE,MADJ;AAEHD,MAAAA,MAAM,EAAE,MAFL;AAGHE,MAAAA,MAAM,EAAE,MAHL;AAIHC,MAAAA,SAAS,EAAE,MAJR;AAKHF,MAAAA,KAAK,EAAE,MALJ;AAMHD,MAAAA,MAAM,EAAE;AANL,KAbG;AAqBVM,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD;AArBA,GAAd;AA0BA,QAAMC,UAAU,GAAGX,KAAK,CAACY,IAAN,CAAWC,IAAX,CAAgBC,MAAnC;AAEA,MAAIH,UAAU,GAAG,GAAjB,EACA,oBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,KAAK,CAACO,KAAnB;AAAA,6BACI,QAAC,cAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBAA0BR,KAAK,CAACY,IAAN,CAAWG;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,KAAK,CAACM,QAAnB;AAAA,iCACI,QAAC,UAAD;AAAA,sBAAaP,KAAK,CAACa;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEZ,KAAK,CAACQ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAgBA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAER,KAAK,CAACO,KAAnB;AAAA,6BACI,QAAC,cAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBAA0BR,KAAK,CAACY,IAAN,CAAWG;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,KAAK,CAACC,IAAnB;AAAA,iCACI,QAAC,UAAD;AAAA,sBAAaF,KAAK,CAACa;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH,CA3DD;;KAAMd,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Container, Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Paper, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\n\nconst PoemCard = (props) => {\n    \n    const style = {\n        card: {\n            height: \"auto\",\n            width: \"90%\",\n            border: \"none\",\n            boxShadow: \"none\"\n        },\n        cardLong: {\n            height: 200,\n            width: \"90%\",\n            border: \"none\",\n            boxShadow: \"none\"\n        },\n        entry: {\n            width: \"auto\",\n            height: \"auto\",\n            border: \"none\",\n            boxShadow: \"none\",\n            width: \"auto\",\n            height: \"auto\"\n        },\n        continue: {\n            color: \"red\"\n        }\n    }\n\n    const poemLength = props.info.text.length;\n\n    if (poemLength > 150)\n    return (\n        <>\n            <Card style={style.entry}>\n                <CardActionArea>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card style={style.cardLong}>\n                        <Typography>{props.text}</Typography>\n                    </Card>\n                    \n                </CardActionArea>\n                \n            </Card>\n            <Button style={style.continue}>Continue Reading</Button>\n        </>\n    )\n\n    return (\n        <>\n            <Card style={style.entry}>\n                <CardActionArea>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card style={style.card}>\n                        <Typography>{props.text}</Typography>\n                    </Card>\n                </CardActionArea>\n            </Card>\n        </>\n    )\n}\n\nexport default PoemCard;"]},"metadata":{},"sourceType":"module"}