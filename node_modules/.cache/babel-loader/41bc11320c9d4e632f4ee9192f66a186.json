{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Paper, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoemCard = props => {\n  _s();\n\n  const [showPoem, setShowPoem] = useState({\n    expand: false,\n    open: false\n  });\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleOpen = () => {\n    setShowPoem({ ...showPoem,\n      open: true\n    });\n  };\n\n  const handleClose = () => {\n    setShowPoem({ ...showPoem,\n      open: false\n    });\n  };\n\n  const handleExpand = () => {\n    setShowPoem({ ...showPoem,\n      expand: true\n    });\n  };\n\n  const handleCollapse = () => {\n    setShowPoem({ ...showPoem,\n      expand: false\n    });\n  };\n\n  const style = {\n    card: {\n      height: \"auto\",\n      width: \"90%\",\n      border: \"none\",\n      boxShadow: \"none\"\n    },\n    cardLong: {\n      height: 200,\n      width: \"90%\",\n      border: \"none\",\n      boxShadow: \"none\"\n    },\n    entry: {\n      width: \"auto\",\n      height: \"auto\",\n      border: \"none\",\n      boxShadow: \"none\",\n      width: \"auto\",\n      height: \"auto\"\n    },\n    continue: {\n      color: \"red\"\n    }\n  };\n  const poemLength = props.info.text.length;\n  if (poemLength > 150) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: style.entry,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: handleOpen,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: !showPoem.expand ? style.cardLong : style.card,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), !showPoem.expand ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleExpand,\n      style: style.continue,\n      children: \"Continue Reading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleCollapse,\n      children: \"Collapse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 114\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: showPoem.open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: props.info.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            autoFocus: true,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: style.entry,\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: style.card,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: showPoem.open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: props.info.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"secondary\",\n            autoFocus: true,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PoemCard, \"6L/yOkihcA2JcJ/WirgP9fdTac8=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = PoemCard;\nexport default PoemCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoemCard\");","map":{"version":3,"sources":["/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js"],"names":["React","useState","Container","Grid","Card","CardActionArea","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Paper","Button","useMediaQuery","useTheme","PoemCard","props","showPoem","setShowPoem","expand","open","theme","fullScreen","breakpoints","down","handleOpen","handleClose","handleExpand","handleCollapse","style","card","height","width","border","boxShadow","cardLong","entry","continue","color","poemLength","info","text","length","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Container, Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Paper, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\n\nconst PoemCard = (props) => {\n\n    const [showPoem, setShowPoem] = useState({\n        expand: false,\n        open: false\n\n    })\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleOpen = () => {\n        setShowPoem({ ...showPoem, open: true });\n      };\n    \n    const handleClose = () => {\n        setShowPoem({ ...showPoem, open: false });\n    };\n\n    const handleExpand = () => {\n        setShowPoem({ ...showPoem, expand: true });\n    }\n\n    const handleCollapse = () => {\n        setShowPoem({ ...showPoem, expand: false });\n    }\n    \n    const style = {\n        card: {\n            height: \"auto\",\n            width: \"90%\",\n            border: \"none\",\n            boxShadow: \"none\"\n        },\n        cardLong: {\n            height: 200,\n            width: \"90%\",\n            border: \"none\",\n            boxShadow: \"none\"\n        },\n        entry: {\n            width: \"auto\",\n            height: \"auto\",\n            border: \"none\",\n            boxShadow: \"none\",\n            width: \"auto\",\n            height: \"auto\"\n        },\n        continue: {\n            color: \"red\"\n        }\n    }\n\n    const poemLength = props.info.text.length;\n\n    if (poemLength > 150)\n    return (\n        <>\n            <Card style={style.entry}>\n                <CardActionArea onClick={handleOpen}>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card style={!showPoem.expand ? style.cardLong : style.card}>\n                        <Typography>{props.text}</Typography>\n                    </Card>\n                </CardActionArea>\n            </Card>\n            {!showPoem.expand ? <Button onClick={handleExpand}style={style.continue}>Continue Reading</Button> : <Button onClick={handleCollapse}>Collapse</Button>}\n            <Dialog\n                fullScreen={fullScreen}\n                open={showPoem.open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n                >\n                <DialogTitle id=\"responsive-dialog-title\">{props.info.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                    <Typography>{props.text}</Typography>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Grid container alignItems=\"right\">\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\n                            Back\n                        </Button>\n                    </Grid>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n    return (\n        <>\n            <Card style={style.entry} onClick={handleOpen}>\n                <CardActionArea>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card style={style.card}>\n                        <Typography>{props.text}</Typography>\n                    </Card>\n                </CardActionArea>\n            </Card>\n            <Dialog\n                fullScreen={fullScreen}\n                open={showPoem.open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n                >\n                <DialogTitle id=\"responsive-dialog-title\">{props.info.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                    <Typography>{props.text}</Typography>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Grid container alignItems=\"right\">\n                        <Button onClick={handleClose} color=\"secondary\" autoFocus>\n                            Back\n                        </Button>\n                    </Grid>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default PoemCard;"]},"metadata":{},"sourceType":"module"}