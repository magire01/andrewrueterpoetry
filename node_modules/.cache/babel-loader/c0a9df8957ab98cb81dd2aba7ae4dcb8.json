{"ast":null,"code":"var _jsxFileName = \"/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Paper, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoemCard = props => {\n  _s();\n\n  const [showPoem, setShowPoem] = useState({\n    expand: false,\n    open: false\n  });\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClickOpen = () => {\n    setShowPoem({ ...showPoem,\n      open: true\n    });\n  };\n\n  const handleClose = () => {\n    setShowPoem({ ...showPoem,\n      open: false\n    });\n  };\n\n  const handleExpand = () => {\n    setShowPoem({ ...showPoem,\n      expand: true\n    });\n  };\n\n  const handleCollapse = () => {\n    setShowPoem({ ...showPoem,\n      expand: false\n    });\n  };\n\n  const style = {\n    card: {\n      height: \"auto\",\n      width: \"90%\",\n      border: \"none\",\n      boxShadow: \"none\"\n    },\n    cardLong: {\n      height: 200,\n      width: \"90%\",\n      border: \"none\",\n      boxShadow: \"none\"\n    },\n    entry: {\n      width: \"auto\",\n      height: \"auto\",\n      border: \"none\",\n      boxShadow: \"none\",\n      width: \"auto\",\n      height: \"auto\"\n    },\n    continue: {\n      color: \"red\"\n    }\n  };\n  const poemLength = props.info.text.length;\n  if (poemLength > 150) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: style.entry,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: style.cardLong,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: style.continue,\n      children: \"Continue Reading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: fullScreen,\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        children: props.info.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            md: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Relatablility - \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 20\n              }, this), props.info.relatability]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", props.info.relatabilityScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            md: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Execution - \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 20\n              }, this), props.info.execution]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", props.info.executionScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            md: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Context - \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 20\n              }, this), props.info.context]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", props.info.contextScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            md: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Subtext - \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 20\n              }, this), props.info.subtext]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", props.info.subtextScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            md: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Emotion - \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 20\n              }, this), props.info.emotion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", props.info.emotionScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Overall Rating: \", props.info.overAllRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Song: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), props.info.song]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            color: \"primary\",\n            autoFocus: true,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: style.entry,\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: props.info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: style.card,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: props.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PoemCard, \"6L/yOkihcA2JcJ/WirgP9fdTac8=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = PoemCard;\nexport default PoemCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoemCard\");","map":{"version":3,"sources":["/Users/markgire/Desktop/andrewrueterpoetry/src/components/PoemCard.js"],"names":["React","useState","Container","Grid","Card","CardActionArea","Typography","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Paper","Button","useMediaQuery","useTheme","PoemCard","props","showPoem","setShowPoem","expand","open","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose","handleExpand","handleCollapse","style","card","height","width","border","boxShadow","cardLong","entry","continue","color","poemLength","info","text","length","title","relatability","relatabilityScore","execution","executionScore","context","contextScore","subtext","subtextScore","emotion","emotionScore","overAllRating","song"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Container, Grid, Card, CardActionArea, Typography, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Paper, Button, useMediaQuery, useTheme } from \"@material-ui/core\";\n\nconst PoemCard = (props) => {\n\n    const [showPoem, setShowPoem] = useState({\n        expand: false,\n        open: false\n\n    })\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClickOpen = () => {\n        setShowPoem({ ...showPoem, open: true });\n      };\n    \n    const handleClose = () => {\n        setShowPoem({ ...showPoem, open: false });\n    };\n\n    const handleExpand = () => {\n        setShowPoem({ ...showPoem, expand: true });\n    }\n\n    const handleCollapse = () => {\n        setShowPoem({ ...showPoem, expand: false });\n    }\n    \n    const style = {\n        card: {\n            height: \"auto\",\n            width: \"90%\",\n            border: \"none\",\n            boxShadow: \"none\"\n        },\n        cardLong: {\n            height: 200,\n            width: \"90%\",\n            border: \"none\",\n            boxShadow: \"none\"\n        },\n        entry: {\n            width: \"auto\",\n            height: \"auto\",\n            border: \"none\",\n            boxShadow: \"none\",\n            width: \"auto\",\n            height: \"auto\"\n        },\n        continue: {\n            color: \"red\"\n        }\n    }\n\n    const poemLength = props.info.text.length;\n\n    if (poemLength > 150)\n    return (\n        <>\n            <Card style={style.entry}>\n                <CardActionArea>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card style={style.cardLong}>\n                        <Typography>{props.text}</Typography>\n                    </Card>\n                    \n                </CardActionArea>\n                \n            </Card>\n            <Button style={style.continue}>Continue Reading</Button>\n            <Dialog\n    fullScreen={fullScreen}\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"responsive-dialog-title\"\n    >\n    <DialogTitle id=\"responsive-dialog-title\">{props.info.title}</DialogTitle>\n    <DialogContent>\n        <DialogContentText>\n            <Grid md=\"12\">\n                <p><span>Relatablility - </span>{props.info.relatability}</p>\n                <p>Score: {props.info.relatabilityScore}</p>\n            </Grid>\n            <Grid md=\"12\">\n                <p><span>Execution - </span>{props.info.execution}</p>\n                <p>Score: {props.info.executionScore}</p>\n            </Grid>\n            <Grid md=\"12\">\n                <p><span>Context - </span>{props.info.context}</p>\n                <p>Score: {props.info.contextScore}</p>\n            </Grid>\n            <Grid md=\"12\">\n                <p><span>Subtext - </span>{props.info.subtext}</p>\n                <p>Score: {props.info.subtextScore}</p>\n            </Grid>\n            <Grid md=\"12\">\n                <p><span>Emotion - </span>{props.info.emotion}</p>\n                <p>Score: {props.info.emotionScore}</p>\n            </Grid>\n            <Grid item md=\"12\">\n                <h5>Overall Rating: {props.info.overAllRating}</h5>\n            </Grid>\n            <Grid item md=\"12\">\n                <h5><span>Song: </span>{props.info.song}</h5>\n            </Grid>\n        </DialogContentText>\n    </DialogContent>\n    <DialogActions>\n        <Grid container alignItems=\"right\">\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n                Back\n            </Button>\n        </Grid>\n    </DialogActions>\n    </Dialog>\n        </>\n    )\n\n    return (\n        <>\n            <Card style={style.entry}>\n                <CardActionArea>\n                    <Typography variant=\"h4\">{props.info.title}</Typography>\n                    <Card style={style.card}>\n                        <Typography>{props.text}</Typography>\n                    </Card>\n                </CardActionArea>\n            </Card>\n        </>\n    )\n}\n\nexport default PoemCard;"]},"metadata":{},"sourceType":"module"}